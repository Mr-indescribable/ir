#!/usr/bin/python3.6
# coding: utf-8

import sys
import argparse
from multiprocessing import Process

from ir import remote


def run_base(config_path):
    def run_base_tcp():
        base_tcp_server = remote.TCPServer(config_path)
        base_tcp_server.run()

    def run_base_udp():
        base_udp_server = remote.UDPServer(config_path)
        base_udp_server.run()

    base_tcp_proc = Process(target=run_base_tcp)
    base_udp_proc = Process(target=run_base_udp)

    base_tcp_proc.start()
    base_udp_proc.start()

    base_tcp_proc.join()
    base_udp_proc.join()


def run_tou(config_path):
    def run_tou_tcp():
        tou_tcp_server = remote.TOUTCPServer(config_path)
        tou_tcp_server.run()

    def run_tou_udp():
        tou_udp_server = remote.TOUUDPServer(config_path)
        tou_udp_server.run()

    def run_base_udp():
        base_udp_server = remote.UDPServer(config_path)
        base_udp_server.run()

    tou_tcp_proc = Process(target=run_tou_tcp)
    tou_udp_proc = Process(target=run_tou_udp)
    base_udp_proc = Process(target=run_base_udp)

    tou_tcp_proc.start()
    tou_udp_proc.start()
    base_udp_proc.start()

    tou_tcp_proc.join()
    tou_udp_proc.join()
    base_udp_proc.join()


if __name__ == '__main__':
    arg_parser = argparse.ArgumentParser(
                    prog='ir-remote',
                    )
    arg_parser.add_argument(
            '-c',
            metavar='<config_file>',
            help='specify the config file',
            )
    arg_parser.add_argument(
            '--tou',
            action='store_true',
            help='activate TCP over UDP mode',
            )

    args = arg_parser.parse_args()

    if not args.c:
        print('please specify the config file')
        sys.exit(1)
    config_path = args.c

    try:
        if args.tou:
            run_tou(config_path)
        else:
            run_base()
    except KeyboardInterrupt:
        sys.exit()
